.content {
	margin: 0px auto;
	width: 500px;
	max-width: 90%;
	display: flex;
	flex-flow: column;
}

.data {
	display: flex;
	justify-content: flex-start;
}

.data div {
	width: 50%;
}

mat-panel-title {
	flex-grow: 2;
	align-items: center;
}

mat-panel-description {
	flex-grow: 1;
	justify-self: flex-end;
	justify-content: flex-end;
	align-items: center;
	margin-right: 0px;
	button {
		margin-left: 20px;
		.mat-icon {
			font-size: 20px;
		}
	}
}

mat-expansion-panel:not(.mat-expanded) {
	margin: 2px 0;
}

.mat-expansion-panel-spacing {
	margin: 16px 0 !important;
}
.vertical-space {
	width: 40px;
	max-width: 10%;
}

form {
	margin: 0px auto;
	width: 400px;
	max-width: 90%;
	display: flex;
	flex-flow: column;
	align-items: stretch;
}

@import '~@angular/material/theming';
@import '../../../theme.scss';
// Extract the color configuration in case a theme has been passed.
// This allows consumers to either pass a theme object or a color configuration.
// Extract the palettes you need from the theme definition.
$primary: map-get($light-app-theme, primary);

// Define any styles affected by the theme.
.booked {
	// Use mat-color to extract individual colors from a palette.
	background-color: mat-color($primary, 100);
}
